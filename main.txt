; generated by Component: ARM Compiler 5.05 update 1 (build 106) Tool: ArmCC [4d0efa]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o..\main.o --asm_dir=..\ --list_dir=..\ --depend=..\main.d --cpu=Cortex-M4.fp --apcs=interwork -O0 --diag_suppress=9931 -I..\USER -I..\CORE -I..\FWLIB\inc -I..\SYSTEM\INC -IG:\uart-NVIC\USER\RTE -IH:\mdk5.14\ARM\PACK\Keil\STM32F4xx_DFP\1.0.8\Device\Include -IH:\mdk5.14\ARM\CMSIS\Include -D__UVISION_VERSION=514 -DSTM32F40_41xxx -DSTM32F40_41xxx -DUSE_STDPERIPH_DRIVER --omf_browse=..\main.crf main.c]
                          THUMB

                          AREA ||i.main||, CODE, READONLY, ALIGN=2

                  main PROC
;;;95       */
;;;96     int main(void)
000000  f44f60a0          MOV      r0,#0x500
;;;97     {
;;;98     	// 设置优先级分组为 2 组，即 抢占优先级位数 : 响应优先级位数 = 2 : 2
;;;99     	NVIC_PriorityGroupConfig(NVIC_PriorityGroup_2);
000004  f7fffffe          BL       NVIC_PriorityGroupConfig
;;;100    	
;;;101     /*!< At this stage the microcontroller clock setting is already configured, 
;;;102           this is done through SystemInit() function which is called from startup
;;;103           files before to branch to application main.
;;;104           To reconfigure the default setting of SystemInit() function, 
;;;105           refer to system_stm32f4xx.c file */
;;;106    
;;;107      /* SysTick end of count event each 10ms */
;;;108      RCC_GetClocksFreq(&RCC_Clocks);
000008  485d              LDR      r0,|L1.384|
00000a  f7fffffe          BL       RCC_GetClocksFreq
;;;109    	// 此函数配置 Systick 定时器每 10ms 产生一次中断
;;;110      SysTick_Config(RCC_Clocks.HCLK_Frequency / 100);
00000e  485c              LDR      r0,|L1.384|
000010  6840              LDR      r0,[r0,#4]  ; RCC_Clocks
000012  2264              MOVS     r2,#0x64
000014  fbb0f1f2          UDIV     r1,r0,r2
000018  1e48              SUBS     r0,r1,#1
00001a  f1b07f80          CMP      r0,#0x1000000
00001e  d300              BCC      |L1.34|
000020  e01b              B        |L1.90|
                  |L1.34|
000022  1e48              SUBS     r0,r1,#1
000024  f04f22e0          MOV      r2,#0xe000e000
000028  6150              STR      r0,[r2,#0x14]
00002a  1750              ASRS     r0,r2,#29
00002c  220f              MOVS     r2,#0xf
00002e  2800              CMP      r0,#0
000030  da07              BGE      |L1.66|
000032  0713              LSLS     r3,r2,#28
000034  0e1d              LSRS     r5,r3,#24
000036  4b53              LDR      r3,|L1.388|
000038  f000040f          AND      r4,r0,#0xf
00003c  1f24              SUBS     r4,r4,#4
00003e  551d              STRB     r5,[r3,r4]
000040  e003              B        |L1.74|
                  |L1.66|
000042  0713              LSLS     r3,r2,#28
000044  0e1c              LSRS     r4,r3,#24
000046  4b50              LDR      r3,|L1.392|
000048  541c              STRB     r4,[r3,r0]
                  |L1.74|
00004a  bf00              NOP      
00004c  2000              MOVS     r0,#0
00004e  f04f22e0          MOV      r2,#0xe000e000
000052  6190              STR      r0,[r2,#0x18]
000054  2007              MOVS     r0,#7
000056  6110              STR      r0,[r2,#0x10]
000058  bf00              NOP      
                  |L1.90|
;;;111      
;;;112      /* Add your application code here */
;;;113      /* Insert 50 ms delay */
;;;114      Delay(5);
00005a  2005              MOVS     r0,#5
00005c  f7fffffe          BL       Delay
;;;115      
;;;116    	// 初始化 MCO
;;;117      mco_init();  
000060  f7fffffe          BL       mco_init
;;;118      
;;;119    	// 初始化 LED
;;;120    	led_init();
000064  f7fffffe          BL       led_init
;;;121    
;;;122    	// 初始化 BEEP
;;;123    	beep_init();
000068  f7fffffe          BL       beep_init
;;;124    	
;;;125    	// 初始化 USART1
;;;126    	usart1_init(9600);
00006c  f44f5016          MOV      r0,#0x2580
000070  f7fffffe          BL       usart1_init
;;;127    	//usart1_init(2400);
;;;128    	//printf("%d\r\n", RCC_Clocks.HCLK_Frequency);
;;;129    	
;;;130    	StruInit(&allConfig); // 初始化
000074  4845              LDR      r0,|L1.396|
000076  f7fffffe          BL       StruInit
;;;131      initApp();
00007a  f7fffffe          BL       initApp
;;;132    
;;;133    	/* Infinite loop */
;;;134      while (1)
00007e  e07e              B        |L1.382|
                  |L1.128|
;;;135      {
;;;136    		//如果协议正确 全部灯全亮，否则全灭并且蜂鸣器响一声
;;;137    		//流水灯循环点亮，中断执行特殊函数
;;;138    		LED0_OFF();
000080  bf00              NOP      
000082  f44f7100          MOV      r1,#0x200
000086  4842              LDR      r0,|L1.400|
000088  f7fffffe          BL       GPIO_SetBits
00008c  bf00              NOP      
;;;139    		LED1_OFF();
00008e  bf00              NOP      
000090  f44f6180          MOV      r1,#0x400
000094  483e              LDR      r0,|L1.400|
000096  f7fffffe          BL       GPIO_SetBits
00009a  bf00              NOP      
;;;140    		LED2_OFF();
00009c  bf00              NOP      
00009e  f44f5100          MOV      r1,#0x2000
0000a2  483c              LDR      r0,|L1.404|
0000a4  f7fffffe          BL       GPIO_SetBits
0000a8  bf00              NOP      
;;;141    		LED3_OFF();
0000aa  bf00              NOP      
0000ac  f44f4180          MOV      r1,#0x4000
0000b0  4838              LDR      r0,|L1.404|
0000b2  f7fffffe          BL       GPIO_SetBits
0000b6  bf00              NOP      
;;;142    
;;;143    		LED0_ON();
0000b8  bf00              NOP      
0000ba  f44f7100          MOV      r1,#0x200
0000be  4834              LDR      r0,|L1.400|
0000c0  f7fffffe          BL       GPIO_ResetBits
0000c4  bf00              NOP      
;;;144    		LED1_OFF();
0000c6  bf00              NOP      
0000c8  f44f6180          MOV      r1,#0x400
0000cc  4830              LDR      r0,|L1.400|
0000ce  f7fffffe          BL       GPIO_SetBits
0000d2  bf00              NOP      
;;;145    		LED2_OFF();
0000d4  bf00              NOP      
0000d6  f44f5100          MOV      r1,#0x2000
0000da  482e              LDR      r0,|L1.404|
0000dc  f7fffffe          BL       GPIO_SetBits
0000e0  bf00              NOP      
;;;146    		LED3_OFF();
0000e2  bf00              NOP      
0000e4  f44f4180          MOV      r1,#0x4000
0000e8  482a              LDR      r0,|L1.404|
0000ea  f7fffffe          BL       GPIO_SetBits
0000ee  bf00              NOP      
;;;147    		Delay(50);
0000f0  2032              MOVS     r0,#0x32
0000f2  f7fffffe          BL       Delay
;;;148    		LED0_OFF();
0000f6  bf00              NOP      
0000f8  f44f7100          MOV      r1,#0x200
0000fc  4824              LDR      r0,|L1.400|
0000fe  f7fffffe          BL       GPIO_SetBits
000102  bf00              NOP      
;;;149    		LED1_ON();
000104  bf00              NOP      
000106  f44f6180          MOV      r1,#0x400
00010a  4821              LDR      r0,|L1.400|
00010c  f7fffffe          BL       GPIO_ResetBits
000110  bf00              NOP      
;;;150      	Delay(50);
000112  2032              MOVS     r0,#0x32
000114  f7fffffe          BL       Delay
;;;151    		LED1_OFF();
000118  bf00              NOP      
00011a  f44f6180          MOV      r1,#0x400
00011e  481c              LDR      r0,|L1.400|
000120  f7fffffe          BL       GPIO_SetBits
000124  bf00              NOP      
;;;152    		LED2_ON();
000126  bf00              NOP      
000128  f44f5100          MOV      r1,#0x2000
00012c  4819              LDR      r0,|L1.404|
00012e  f7fffffe          BL       GPIO_ResetBits
000132  bf00              NOP      
;;;153    		Delay(50);
000134  2032              MOVS     r0,#0x32
000136  f7fffffe          BL       Delay
;;;154    		LED2_OFF();
00013a  bf00              NOP      
00013c  f44f5100          MOV      r1,#0x2000
000140  4814              LDR      r0,|L1.404|
000142  f7fffffe          BL       GPIO_SetBits
000146  bf00              NOP      
;;;155    		LED3_ON();
000148  bf00              NOP      
00014a  f44f4180          MOV      r1,#0x4000
00014e  4811              LDR      r0,|L1.404|
000150  f7fffffe          BL       GPIO_ResetBits
000154  bf00              NOP      
;;;156    		Delay(50);
000156  2032              MOVS     r0,#0x32
000158  f7fffffe          BL       Delay
;;;157    		LED3_OFF();
00015c  bf00              NOP      
00015e  f44f4180          MOV      r1,#0x4000
000162  480c              LDR      r0,|L1.404|
000164  f7fffffe          BL       GPIO_SetBits
000168  bf00              NOP      
;;;158    		LED0_ON();
00016a  bf00              NOP      
00016c  f44f7100          MOV      r1,#0x200
000170  4807              LDR      r0,|L1.400|
000172  f7fffffe          BL       GPIO_ResetBits
000176  bf00              NOP      
;;;159    
;;;160    		Delay(50);
000178  2032              MOVS     r0,#0x32
00017a  f7fffffe          BL       Delay
                  |L1.382|
00017e  e77f              B        |L1.128|
;;;161    	 
;;;162      }
;;;163    }
;;;164    
                          ENDP

                  |L1.384|
                          DCD      RCC_Clocks
                  |L1.388|
                          DCD      0xe000ed18
                  |L1.392|
                          DCD      0xe000e400
                  |L1.396|
                          DCD      allConfig
                  |L1.400|
                          DCD      0x40021400
                  |L1.404|
                          DCD      0x40021000

                          AREA ||.bss||, DATA, NOINIT, ALIGN=2

                  allConfig
                          %        2690
                  receiveDataArray
                          %        258
                  RCC_Clocks
                          %        16

                          AREA ||.data||, DATA, ALIGN=2

                  receiveMsgType
000000  1001              DCW      0x1001
000002  0000              DCB      0x00,0x00
                          DCD      getStatusInfo
000008  1002              DCW      0x1002
00000a  0000              DCB      0x00,0x00
                          DCD      setChannel
000010  1003              DCW      0x1003
000012  0000              DCB      0x00,0x00
                          DCD      setTotalVolume
000018  1004              DCW      0x1004
00001a  0000              DCB      0x00,0x00
                          DCD      setResetBalance
000020  1005              DCW      0x1005
000022  0000              DCB      0x00,0x00
                          DCD      setEqualizerRec
000028  1006              DCW      0x1006
00002a  0000              DCB      0x00,0x00
                          DCD      setMute
000030  1007              DCW      0x1007
000032  0000              DCB      0x00,0x00
                          DCD      setPreSoundEffe
000038  1008              DCW      0x1008
00003a  0000              DCB      0x00,0x00
                          DCD      systemReset
000040  1009              DCW      0x1009
000042  0000              DCB      0x00,0x00
                          DCD      setEqualizerCtr
000048  100a              DCW      0x100a
00004a  0000              DCB      0x00,0x00
                          DCD      setGraphicEqualizer
000050  100b              DCW      0x100b
000052  0000              DCB      0x00,0x00
                          DCD      setJointCtr
000058  100c              DCW      0x100c
00005a  0000              DCB      0x00,0x00
                          DCD      setDelayCtr
000060  100d              DCW      0x100d
000062  0000              DCB      0x00,0x00
                          DCD      reserve1
000068  100e              DCW      0x100e
00006a  0000              DCB      0x00,0x00
                          DCD      reserve2
000070  100f              DCW      0x100f
000072  0000              DCB      0x00,0x00
                          DCD      reserve3
000078  5001              DCW      0x5001
00007a  0000              DCB      0x00,0x00
                          DCD      sendEquipmentInfo
000080  5007              DCW      0x5007
000082  0000              DCB      0x00,0x00
                          DCD      BluetoothMatch
                          %        24

;*** Start embedded assembler ***

#line 1 "main.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___6_main_c_0fb93f5a____REV16|
#line 138 "..\\CORE\\core_cmInstr.h"
|__asm___6_main_c_0fb93f5a____REV16| PROC
#line 139

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___6_main_c_0fb93f5a____REVSH|
#line 153
|__asm___6_main_c_0fb93f5a____REVSH| PROC
#line 154

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___6_main_c_0fb93f5a____RRX|
#line 328
|__asm___6_main_c_0fb93f5a____RRX| PROC
#line 329

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***

                  __ARM_use_no_argv EQU 0
