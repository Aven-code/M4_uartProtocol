; generated by Component: ARM Compiler 5.05 update 1 (build 106) Tool: ArmCC [4d0efa]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o..\data.o --asm_dir=..\ --list_dir=..\ --depend=..\data.d --cpu=Cortex-M4.fp --apcs=interwork -O0 --diag_suppress=9931 -I..\USER -I..\CORE -I..\FWLIB\inc -I..\SYSTEM\INC -IG:\uart-NVIC\USER\RTE -IH:\mdk5.14\ARM\PACK\Keil\STM32F4xx_DFP\1.0.8\Device\Include -IH:\mdk5.14\ARM\CMSIS\Include -D__UVISION_VERSION=514 -DSTM32F40_41xxx -DSTM32F40_41xxx -DUSE_STDPERIPH_DRIVER --omf_browse=..\data.crf ..\SYSTEM\SRC\data.c]
                          THUMB

                          AREA ||i.StruInit||, CODE, READONLY, ALIGN=1

                  StruInit PROC
;;;18     */
;;;19     void StruInit(Stru_Data * all)
000000  b530              PUSH     {r4,r5,lr}
;;;20     {
;;;21         u8 i,j;
;;;22         all->volume = 0x35;     //设置总音量50%
000002  2335              MOVS     r3,#0x35
000004  7003              STRB     r3,[r0,#0]
;;;23         all->Mute = 0x01;
000006  2301              MOVS     r3,#1
000008  7043              STRB     r3,[r0,#1]
;;;24         //初始化12个通道
;;;25         for(i=0;i<12;i++)
00000a  2100              MOVS     r1,#0
00000c  e08a              B        |L1.292|
                  |L1.14|
;;;26         {
;;;27             //延迟
;;;28             all->CH[i].ms = 0;
00000e  2400              MOVS     r4,#0
000010  ebc105c1          RSB      r5,r1,r1,LSL #3
000014  1c83              ADDS     r3,r0,#2
000016  eb031345          ADD      r3,r3,r5,LSL #5
00001a  801c              STRH     r4,[r3,#0]
;;;29             all->CH[i].cm = 0;
00001c  ebc105c1          RSB      r5,r1,r1,LSL #3
000020  1c83              ADDS     r3,r0,#2
000022  eb031345          ADD      r3,r3,r5,LSL #5
000026  805c              STRH     r4,[r3,#2]
;;;30             all->CH[i].inch = 0;
000028  ebc105c1          RSB      r5,r1,r1,LSL #3
00002c  1c83              ADDS     r3,r0,#2
00002e  eb031345          ADD      r3,r3,r5,LSL #5
000032  809c              STRH     r4,[r3,#4]
;;;31             
;;;32             //通道界面高通
;;;33             all->CH[i].passA.hign.type = 0x00;         //i通道界面高通过滤器：默认0 第一个
000034  ebc105c1          RSB      r5,r1,r1,LSL #3
000038  1c83              ADDS     r3,r0,#2
00003a  eb031345          ADD      r3,r3,r5,LSL #5
00003e  719c              STRB     r4,[r3,#6]
;;;34             all->CH[i].passA.hign.freque = 0x14;       //高通转折频率: 20Hz
000040  2414              MOVS     r4,#0x14
000042  ebc105c1          RSB      r5,r1,r1,LSL #3
000046  1c83              ADDS     r3,r0,#2
000048  eb031345          ADD      r3,r3,r5,LSL #5
00004c  811c              STRH     r4,[r3,#8]
;;;35             all->CH[i].passA.hign.Order = 0x04;         //高通阶数:24db/Oct
00004e  2404              MOVS     r4,#4
000050  ebc105c1          RSB      r5,r1,r1,LSL #3
000054  1c83              ADDS     r3,r0,#2
000056  eb031345          ADD      r3,r3,r5,LSL #5
00005a  729c              STRB     r4,[r3,#0xa]
;;;36             
;;;37             //通道界面低通
;;;38             all->CH[i].passA.low.type = 0x00;           //i通道界面低通过滤器：默认0 第一个
00005c  2400              MOVS     r4,#0
00005e  ebc105c1          RSB      r5,r1,r1,LSL #3
000062  1c83              ADDS     r3,r0,#2
000064  eb031345          ADD      r3,r3,r5,LSL #5
000068  731c              STRB     r4,[r3,#0xc]
;;;39             all->CH[i].passA.low.freque = (0x01<<8)|0xf4;//低通转折频率: 500Hz
00006a  f44f74fa          MOV      r4,#0x1f4
00006e  ebc105c1          RSB      r5,r1,r1,LSL #3
000072  1c83              ADDS     r3,r0,#2
000074  eb031345          ADD      r3,r3,r5,LSL #5
000078  81dc              STRH     r4,[r3,#0xe]
;;;40             all->CH[i].passA.low.Order = 0x04;          //低通阶数:24db/Oct
00007a  2404              MOVS     r4,#4
00007c  ebc105c1          RSB      r5,r1,r1,LSL #3
000080  1c83              ADDS     r3,r0,#2
000082  eb031345          ADD      r3,r3,r5,LSL #5
000086  741c              STRB     r4,[r3,#0x10]
;;;41            
;;;42             all->CH[i].passA.passMute = 0x02;           //通道是否静音: 不静音
000088  2402              MOVS     r4,#2
00008a  ebc105c1          RSB      r5,r1,r1,LSL #3
00008e  1c83              ADDS     r3,r0,#2
000090  eb031345          ADD      r3,r3,r5,LSL #5
000094  749c              STRB     r4,[r3,#0x12]
;;;43             all->CH[i].passA.Phase = 0x01;             //通道相位 0x01 正相， 反相0x02
000096  2401              MOVS     r4,#1
000098  ebc105c1          RSB      r5,r1,r1,LSL #3
00009c  1c83              ADDS     r3,r0,#2
00009e  eb031345          ADD      r3,r3,r5,LSL #5
0000a2  74dc              STRB     r4,[r3,#0x13]
;;;44             all->CH[i].passA.value = 0x32;              //步长数值： 0-90 :默认50
0000a4  2432              MOVS     r4,#0x32
0000a6  ebc105c1          RSB      r5,r1,r1,LSL #3
0000aa  1c83              ADDS     r3,r0,#2
0000ac  eb031345          ADD      r3,r3,r5,LSL #5
0000b0  751c              STRB     r4,[r3,#0x14]
;;;45     
;;;46             /*EQ:每个通道有31个EQ*/
;;;47             for(j=0;j<31;j++)
0000b2  2200              MOVS     r2,#0
0000b4  e024              B        |L1.256|
                  |L1.182|
;;;48             {
;;;49                 all->CH[i].eq[j].agin = 0x00;           //增益 默认0.0
0000b6  2400              MOVS     r4,#0
0000b8  ebc105c1          RSB      r5,r1,r1,LSL #3
0000bc  1c83              ADDS     r3,r0,#2
0000be  eb031345          ADD      r3,r3,r5,LSL #5
0000c2  3326              ADDS     r3,r3,#0x26
0000c4  eb020542          ADD      r5,r2,r2,LSL #1
0000c8  f8034015          STRB     r4,[r3,r5,LSL #1]
;;;50                 all->CH[i].eq[j].valueQ = 0x02;         //Q值：默认2.525 ，我向下取整，后期再进行小数化
0000cc  2402              MOVS     r4,#2
0000ce  ebc105c1          RSB      r5,r1,r1,LSL #3
0000d2  1c83              ADDS     r3,r0,#2
0000d4  eb031345          ADD      r3,r3,r5,LSL #5
0000d8  3326              ADDS     r3,r3,#0x26
0000da  eb020542          ADD      r5,r2,r2,LSL #1
0000de  eb030345          ADD      r3,r3,r5,LSL #1
0000e2  805c              STRH     r4,[r3,#2]
;;;51                 all->CH[i].eq[j].Center_fre = 0x32;    //频率是由机器随机生成，所以我这里字节默认50Khz 
0000e4  2432              MOVS     r4,#0x32
0000e6  ebc105c1          RSB      r5,r1,r1,LSL #3
0000ea  1c83              ADDS     r3,r0,#2
0000ec  eb031345          ADD      r3,r3,r5,LSL #5
0000f0  3326              ADDS     r3,r3,#0x26
0000f2  eb020542          ADD      r5,r2,r2,LSL #1
0000f6  eb030345          ADD      r3,r3,r5,LSL #1
0000fa  809c              STRH     r4,[r3,#4]
0000fc  1c53              ADDS     r3,r2,#1              ;47
0000fe  b2da              UXTB     r2,r3                 ;47
                  |L1.256|
000100  2a1f              CMP      r2,#0x1f              ;47
000102  dbd8              BLT      |L1.182|
;;;52             }
;;;53     
;;;54             /*混音：每个通道有16个混音*/
;;;55             for(j=0;j<16;j++)
000104  2200              MOVS     r2,#0
000106  e009              B        |L1.284|
                  |L1.264|
;;;56             {
;;;57                  all->CH[i].mix_all[j] = 0X7F;  // 0-255 的一半：127
000108  247f              MOVS     r4,#0x7f
00010a  ebc105c1          RSB      r5,r1,r1,LSL #3
00010e  1c83              ADDS     r3,r0,#2
000110  eb031345          ADD      r3,r3,r5,LSL #5
000114  3316              ADDS     r3,r3,#0x16
000116  549c              STRB     r4,[r3,r2]
000118  1c53              ADDS     r3,r2,#1              ;55
00011a  b2da              UXTB     r2,r3                 ;55
                  |L1.284|
00011c  2a10              CMP      r2,#0x10              ;55
00011e  dbf3              BLT      |L1.264|
000120  1c4b              ADDS     r3,r1,#1              ;25
000122  b2d9              UXTB     r1,r3                 ;25
                  |L1.292|
000124  290c              CMP      r1,#0xc               ;25
000126  f6ffaf72          BLT      |L1.14|
;;;58             }
;;;59             
;;;60         
;;;61         }
;;;62     
;;;63     }
00012a  bd30              POP      {r4,r5,pc}
;;;64     
                          ENDP


                          AREA ||i.printData||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_percent
                          REQUIRE _printf_d
                          REQUIRE _printf_int_dec
                          REQUIRE _printf_pre_padding
                          REQUIRE _printf_flags
                          REQUIRE _printf_widthprec
                          REQUIRE _printf_x
                          REQUIRE _printf_longlong_hex
                          REQUIRE _printf_c
                          REQUIRE _printf_str
                  printData PROC
;;;97     */
;;;98     void printData(const Stru_Data * all)
000000  b570              PUSH     {r4-r6,lr}
;;;99     { 
000002  4605              MOV      r5,r0
;;;100        
;;;101        u8 i,j; 
;;;102          
;;;103        printf("all->volume: %d\n",  all->volume);   
000004  7829              LDRB     r1,[r5,#0]
000006  a06a              ADR      r0,|L2.432|
000008  f7fffffe          BL       __2printf
;;;104        printf("all->mute:%d\n",  all->Mute);
00000c  7869              LDRB     r1,[r5,#1]
00000e  a06d              ADR      r0,|L2.452|
000010  f7fffffe          BL       __2printf
;;;105        for(i=0;i<12;i++)
000014  2400              MOVS     r4,#0
000016  e0c6              B        |L2.422|
                  |L2.24|
;;;106        {
;;;107            printf("\nNo.%d--------------------------------Start----------------------------------------------\n",i+1);
000018  1c61              ADDS     r1,r4,#1
00001a  486e              LDR      r0,|L2.468|
00001c  f7fffffe          BL       __2printf
;;;108            printf("ms: 0x%02X\t", all->CH[i].ms );
000020  ebc402c4          RSB      r2,r4,r4,LSL #3
000024  1ca8              ADDS     r0,r5,#2
000026  eb001042          ADD      r0,r0,r2,LSL #5
00002a  8801              LDRH     r1,[r0,#0]
00002c  a06a              ADR      r0,|L2.472|
00002e  f7fffffe          BL       __2printf
;;;109            printf("cm: 0x%02X\t", all->CH[i].cm );
000032  ebc402c4          RSB      r2,r4,r4,LSL #3
000036  1ca8              ADDS     r0,r5,#2
000038  eb001042          ADD      r0,r0,r2,LSL #5
00003c  8841              LDRH     r1,[r0,#2]
00003e  a069              ADR      r0,|L2.484|
000040  f7fffffe          BL       __2printf
;;;110            printf("inch: 0x%02X\t", all->CH[i].inch); 
000044  ebc402c4          RSB      r2,r4,r4,LSL #3
000048  1ca8              ADDS     r0,r5,#2
00004a  eb001042          ADD      r0,r0,r2,LSL #5
00004e  8881              LDRH     r1,[r0,#4]
000050  a067              ADR      r0,|L2.496|
000052  f7fffffe          BL       __2printf
;;;111    
;;;112    				printf("\n__________hign________\n");
000056  a06a              ADR      r0,|L2.512|
000058  f7fffffe          BL       __2printf
;;;113            printf("all->CH[i].passA.hign.type: 0x%02X\t",all->CH[i].passA.hign.type);
00005c  ebc402c4          RSB      r2,r4,r4,LSL #3
000060  1ca8              ADDS     r0,r5,#2
000062  eb001042          ADD      r0,r0,r2,LSL #5
000066  7981              LDRB     r1,[r0,#6]
000068  a06c              ADR      r0,|L2.540|
00006a  f7fffffe          BL       __2printf
;;;114            printf("all->CH[i].passA.hign.freque: 0x%04X\t",all->CH[i].passA.hign.freque);
00006e  ebc402c4          RSB      r2,r4,r4,LSL #3
000072  1ca8              ADDS     r0,r5,#2
000074  eb001042          ADD      r0,r0,r2,LSL #5
000078  8901              LDRH     r1,[r0,#8]
00007a  a071              ADR      r0,|L2.576|
00007c  f7fffffe          BL       __2printf
;;;115            printf("all->CH[i].passA.hign.Order: 0x%02X",all->CH[i].passA.hign.Order);
000080  ebc402c4          RSB      r2,r4,r4,LSL #3
000084  1ca8              ADDS     r0,r5,#2
000086  eb001042          ADD      r0,r0,r2,LSL #5
00008a  7a81              LDRB     r1,[r0,#0xa]
00008c  a076              ADR      r0,|L2.616|
00008e  f7fffffe          BL       __2printf
;;;116    
;;;117            printf("\n__________low________\n");
000092  a07e              ADR      r0,|L2.652|
000094  f7fffffe          BL       __2printf
;;;118            printf("all->CH[i].passA.low.type: 0x%02X\t",all->CH[i].passA.low.type);
000098  ebc402c4          RSB      r2,r4,r4,LSL #3
00009c  1ca8              ADDS     r0,r5,#2
00009e  eb001042          ADD      r0,r0,r2,LSL #5
0000a2  7b01              LDRB     r1,[r0,#0xc]
0000a4  a07f              ADR      r0,|L2.676|
0000a6  f7fffffe          BL       __2printf
;;;119            printf("all->CH[i].passA.low.freque: 0x%04X\t",all->CH[i].passA.low.freque);
0000aa  ebc402c4          RSB      r2,r4,r4,LSL #3
0000ae  1ca8              ADDS     r0,r5,#2
0000b0  eb001042          ADD      r0,r0,r2,LSL #5
0000b4  89c1              LDRH     r1,[r0,#0xe]
0000b6  a084              ADR      r0,|L2.712|
0000b8  f7fffffe          BL       __2printf
;;;120            printf("all->CH[i].passA.low.Order: 0x%02X",all->CH[i].passA.low.Order);
0000bc  ebc402c4          RSB      r2,r4,r4,LSL #3
0000c0  1ca8              ADDS     r0,r5,#2
0000c2  eb001042          ADD      r0,r0,r2,LSL #5
0000c6  7c01              LDRB     r1,[r0,#0x10]
0000c8  a089              ADR      r0,|L2.752|
0000ca  f7fffffe          BL       __2printf
;;;121    
;;;122            printf("\n__________other________\n");
0000ce  a091              ADR      r0,|L2.788|
0000d0  f7fffffe          BL       __2printf
;;;123            printf("all->CH[i].passA.passMute: %c\t",(all->CH[i].passA.passMute == 0x01)?'Y':'N');
0000d4  ebc402c4          RSB      r2,r4,r4,LSL #3
0000d8  1ca8              ADDS     r0,r5,#2
0000da  eb001042          ADD      r0,r0,r2,LSL #5
0000de  7c80              LDRB     r0,[r0,#0x12]
0000e0  2801              CMP      r0,#1
0000e2  d101              BNE      |L2.232|
0000e4  2059              MOVS     r0,#0x59
0000e6  e000              B        |L2.234|
                  |L2.232|
0000e8  204e              MOVS     r0,#0x4e
                  |L2.234|
0000ea  4601              MOV      r1,r0
0000ec  a090              ADR      r0,|L2.816|
0000ee  f7fffffe          BL       __2printf
;;;124            printf("all->CH[i].passA.Phase: 0x%02X\t", all->CH[i].passA.Phase);
0000f2  ebc402c4          RSB      r2,r4,r4,LSL #3
0000f6  1ca8              ADDS     r0,r5,#2
0000f8  eb001042          ADD      r0,r0,r2,LSL #5
0000fc  7cc1              LDRB     r1,[r0,#0x13]
0000fe  a094              ADR      r0,|L2.848|
000100  f7fffffe          BL       __2printf
;;;125            printf("all->CH[i].passA.value: 0x%02X", all->CH[i].passA.value);
000104  ebc402c4          RSB      r2,r4,r4,LSL #3
000108  1ca8              ADDS     r0,r5,#2
00010a  eb001042          ADD      r0,r0,r2,LSL #5
00010e  7d01              LDRB     r1,[r0,#0x14]
000110  a097              ADR      r0,|L2.880|
000112  f7fffffe          BL       __2printf
;;;126     
;;;127         
;;;128            printf("\n__________________________EQ____________________________\n");
000116  a09e              ADR      r0,|L2.912|
000118  f7fffffe          BL       __2printf
;;;129            
;;;130            for(j=0;j<31;j++)
00011c  2600              MOVS     r6,#0
00011e  e02e              B        |L2.382|
                  |L2.288|
;;;131            {
;;;132                printf("index: %d all->CH[i].eq[%d].agin: %d\t",j,j,all->CH[i].eq[j].agin);
000120  ebc401c4          RSB      r1,r4,r4,LSL #3
000124  1ca8              ADDS     r0,r5,#2
000126  eb001041          ADD      r0,r0,r1,LSL #5
00012a  3026              ADDS     r0,r0,#0x26
00012c  eb060146          ADD      r1,r6,r6,LSL #1
000130  f8103011          LDRB     r3,[r0,r1,LSL #1]
000134  4632              MOV      r2,r6
000136  4631              MOV      r1,r6
000138  a0a4              ADR      r0,|L2.972|
00013a  f7fffffe          BL       __2printf
;;;133                printf("all->CH[i].eq[%d].valueQ: %d\t",j,all->CH[i].eq[j].valueQ);
00013e  ebc401c4          RSB      r1,r4,r4,LSL #3
000142  1ca8              ADDS     r0,r5,#2
000144  eb001041          ADD      r0,r0,r1,LSL #5
000148  3026              ADDS     r0,r0,#0x26
00014a  eb060146          ADD      r1,r6,r6,LSL #1
00014e  eb000041          ADD      r0,r0,r1,LSL #1
000152  8842              LDRH     r2,[r0,#2]
000154  4631              MOV      r1,r6
000156  a0a7              ADR      r0,|L2.1012|
000158  f7fffffe          BL       __2printf
;;;134                printf("all->CH[i].eq[%d].Center_fre: %d\t",j,all->CH[i].eq[j].Center_fre);
00015c  ebc401c4          RSB      r1,r4,r4,LSL #3
000160  1ca8              ADDS     r0,r5,#2
000162  eb001041          ADD      r0,r0,r1,LSL #5
000166  3026              ADDS     r0,r0,#0x26
000168  eb060146          ADD      r1,r6,r6,LSL #1
00016c  eb000041          ADD      r0,r0,r1,LSL #1
000170  8882              LDRH     r2,[r0,#4]
000172  4631              MOV      r1,r6
000174  a0a7              ADR      r0,|L2.1044|
000176  f7fffffe          BL       __2printf
00017a  1c70              ADDS     r0,r6,#1              ;130
00017c  b2c6              UXTB     r6,r0                 ;130
                  |L2.382|
00017e  2e1f              CMP      r6,#0x1f              ;130
000180  dbce              BLT      |L2.288|
;;;135            }
;;;136     /*混音：每个通道有16个混音*/
;;;137            printf("\n --Mix---------------------\n");
000182  a0ad              ADR      r0,|L2.1080|
000184  f7fffffe          BL       __2printf
;;;138            printMix(all->CH[i].mix_all);
000188  ebc402c4          RSB      r2,r4,r4,LSL #3
00018c  1ca9              ADDS     r1,r5,#2
00018e  eb011142          ADD      r1,r1,r2,LSL #5
000192  f1010016          ADD      r0,r1,#0x16
000196  f7fffffe          BL       printMix
;;;139            
;;;140            printf("\nNo.%d--------------------------------End----------------------------------------------\n",i+1);
00019a  1c61              ADDS     r1,r4,#1
00019c  48ae              LDR      r0,|L2.1112|
00019e  f7fffffe          BL       __2printf
0001a2  1c60              ADDS     r0,r4,#1              ;105
0001a4  b2c4              UXTB     r4,r0                 ;105
                  |L2.422|
0001a6  2c0c              CMP      r4,#0xc               ;105
0001a8  f6ffaf36          BLT      |L2.24|
;;;141    
;;;142        }
;;;143        
;;;144           
;;;145     
;;;146      
;;;147    }
0001ac  bd70              POP      {r4-r6,pc}
;;;148    
                          ENDP

0001ae  0000              DCW      0x0000
                  |L2.432|
0001b0  616c6c2d          DCB      "all->volume: %d\n",0
0001b4  3e766f6c
0001b8  756d653a
0001bc  2025640a
0001c0  00      
0001c1  00                DCB      0
0001c2  00                DCB      0
0001c3  00                DCB      0
                  |L2.452|
0001c4  616c6c2d          DCB      "all->mute:%d\n",0
0001c8  3e6d7574
0001cc  653a2564
0001d0  0a00    
0001d2  00                DCB      0
0001d3  00                DCB      0
                  |L2.468|
                          DCD      ||.conststring||
                  |L2.472|
0001d8  6d733a20          DCB      "ms: 0x%02X\t",0
0001dc  30782530
0001e0  32580900
                  |L2.484|
0001e4  636d3a20          DCB      "cm: 0x%02X\t",0
0001e8  30782530
0001ec  32580900
                  |L2.496|
0001f0  696e6368          DCB      "inch: 0x%02X\t",0
0001f4  3a203078
0001f8  25303258
0001fc  0900    
0001fe  00                DCB      0
0001ff  00                DCB      0
                  |L2.512|
000200  0a5f5f5f          DCB      "\n__________hign________\n",0
000204  5f5f5f5f
000208  5f5f5f68
00020c  69676e5f
000210  5f5f5f5f
000214  5f5f5f0a
000218  00      
000219  00                DCB      0
00021a  00                DCB      0
00021b  00                DCB      0
                  |L2.540|
00021c  616c6c2d          DCB      "all->CH[i].passA.hign.type: 0x%02X\t",0
000220  3e43485b
000224  695d2e70
000228  61737341
00022c  2e686967
000230  6e2e7479
000234  70653a20
000238  30782530
00023c  32580900
                  |L2.576|
000240  616c6c2d          DCB      "all->CH[i].passA.hign.freque: 0x%04X\t",0
000244  3e43485b
000248  695d2e70
00024c  61737341
000250  2e686967
000254  6e2e6672
000258  65717565
00025c  3a203078
000260  25303458
000264  0900    
000266  00                DCB      0
000267  00                DCB      0
                  |L2.616|
000268  616c6c2d          DCB      "all->CH[i].passA.hign.Order: 0x%02X",0
00026c  3e43485b
000270  695d2e70
000274  61737341
000278  2e686967
00027c  6e2e4f72
000280  6465723a
000284  20307825
000288  30325800
                  |L2.652|
00028c  0a5f5f5f          DCB      "\n__________low________\n",0
000290  5f5f5f5f
000294  5f5f5f6c
000298  6f775f5f
00029c  5f5f5f5f
0002a0  5f5f0a00
                  |L2.676|
0002a4  616c6c2d          DCB      "all->CH[i].passA.low.type: 0x%02X\t",0
0002a8  3e43485b
0002ac  695d2e70
0002b0  61737341
0002b4  2e6c6f77
0002b8  2e747970
0002bc  653a2030
0002c0  78253032
0002c4  580900  
0002c7  00                DCB      0
                  |L2.712|
0002c8  616c6c2d          DCB      "all->CH[i].passA.low.freque: 0x%04X\t",0
0002cc  3e43485b
0002d0  695d2e70
0002d4  61737341
0002d8  2e6c6f77
0002dc  2e667265
0002e0  7175653a
0002e4  20307825
0002e8  30345809
0002ec  00      
0002ed  00                DCB      0
0002ee  00                DCB      0
0002ef  00                DCB      0
                  |L2.752|
0002f0  616c6c2d          DCB      "all->CH[i].passA.low.Order: 0x%02X",0
0002f4  3e43485b
0002f8  695d2e70
0002fc  61737341
000300  2e6c6f77
000304  2e4f7264
000308  65723a20
00030c  30782530
000310  325800  
000313  00                DCB      0
                  |L2.788|
000314  0a5f5f5f          DCB      "\n__________other________\n",0
000318  5f5f5f5f
00031c  5f5f5f6f
000320  74686572
000324  5f5f5f5f
000328  5f5f5f5f
00032c  0a00    
00032e  00                DCB      0
00032f  00                DCB      0
                  |L2.816|
000330  616c6c2d          DCB      "all->CH[i].passA.passMute: %c\t",0
000334  3e43485b
000338  695d2e70
00033c  61737341
000340  2e706173
000344  734d7574
000348  653a2025
00034c  630900  
00034f  00                DCB      0
                  |L2.848|
000350  616c6c2d          DCB      "all->CH[i].passA.Phase: 0x%02X\t",0
000354  3e43485b
000358  695d2e70
00035c  61737341
000360  2e506861
000364  73653a20
000368  30782530
00036c  32580900
                  |L2.880|
000370  616c6c2d          DCB      "all->CH[i].passA.value: 0x%02X",0
000374  3e43485b
000378  695d2e70
00037c  61737341
000380  2e76616c
000384  75653a20
000388  30782530
00038c  325800  
00038f  00                DCB      0
                  |L2.912|
000390  0a5f5f5f          DCB      "\n__________________________EQ_________________________"
000394  5f5f5f5f
000398  5f5f5f5f
00039c  5f5f5f5f
0003a0  5f5f5f5f
0003a4  5f5f5f5f
0003a8  5f5f5f45
0003ac  515f5f5f
0003b0  5f5f5f5f
0003b4  5f5f5f5f
0003b8  5f5f5f5f
0003bc  5f5f5f5f
0003c0  5f5f5f5f
0003c4  5f5f    
0003c6  5f5f5f0a          DCB      "___\n",0
0003ca  00      
0003cb  00                DCB      0
                  |L2.972|
0003cc  696e6465          DCB      "index: %d all->CH[i].eq[%d].agin: %d\t",0
0003d0  783a2025
0003d4  6420616c
0003d8  6c2d3e43
0003dc  485b695d
0003e0  2e65715b
0003e4  25645d2e
0003e8  6167696e
0003ec  3a202564
0003f0  0900    
0003f2  00                DCB      0
0003f3  00                DCB      0
                  |L2.1012|
0003f4  616c6c2d          DCB      "all->CH[i].eq[%d].valueQ: %d\t",0
0003f8  3e43485b
0003fc  695d2e65
000400  715b2564
000404  5d2e7661
000408  6c756551
00040c  3a202564
000410  0900    
000412  00                DCB      0
000413  00                DCB      0
                  |L2.1044|
000414  616c6c2d          DCB      "all->CH[i].eq[%d].Center_fre: %d\t",0
000418  3e43485b
00041c  695d2e65
000420  715b2564
000424  5d2e4365
000428  6e746572
00042c  5f667265
000430  3a202564
000434  0900    
000436  00                DCB      0
000437  00                DCB      0
                  |L2.1080|
000438  0a202d2d          DCB      "\n --Mix---------------------\n",0
00043c  4d69782d
000440  2d2d2d2d
000444  2d2d2d2d
000448  2d2d2d2d
00044c  2d2d2d2d
000450  2d2d2d2d
000454  0a00    
000456  00                DCB      0
000457  00                DCB      0
                  |L2.1112|
                          DCD      ||.conststring||+0x5c

                          AREA ||i.printMix||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_percent
                          REQUIRE _printf_d
                          REQUIRE _printf_int_dec
                  printMix PROC
;;;70     */
;;;71     static void printMix(const u8 * mix)
000000  b510              PUSH     {r4,lr}
;;;72     {
000002  4604              MOV      r4,r0
;;;73         printf("h1: %d\t",mix[h1]);
000004  7821              LDRB     r1,[r4,#0]
000006  a020              ADR      r0,|L3.136|
000008  f7fffffe          BL       __2printf
;;;74         printf("h2: %d\t",mix[h2]);
00000c  7861              LDRB     r1,[r4,#1]
00000e  a020              ADR      r0,|L3.144|
000010  f7fffffe          BL       __2printf
;;;75         printf("h3: %d\t",mix[h3]);
000014  78a1              LDRB     r1,[r4,#2]
000016  a020              ADR      r0,|L3.152|
000018  f7fffffe          BL       __2printf
;;;76         printf("h4: %d\t",mix[h4]);
00001c  78e1              LDRB     r1,[r4,#3]
00001e  a020              ADR      r0,|L3.160|
000020  f7fffffe          BL       __2printf
;;;77         printf("h5: %d\n",mix[h5]);
000024  7921              LDRB     r1,[r4,#4]
000026  a020              ADR      r0,|L3.168|
000028  f7fffffe          BL       __2printf
;;;78         printf("h6: %d\t",mix[h6]);
00002c  7961              LDRB     r1,[r4,#5]
00002e  a020              ADR      r0,|L3.176|
000030  f7fffffe          BL       __2printf
;;;79         printf("l1: %d\t",mix[l1]);
000034  79a1              LDRB     r1,[r4,#6]
000036  a020              ADR      r0,|L3.184|
000038  f7fffffe          BL       __2printf
;;;80         printf("l2: %d\t",mix[l2]);
00003c  79e1              LDRB     r1,[r4,#7]
00003e  a020              ADR      r0,|L3.192|
000040  f7fffffe          BL       __2printf
;;;81         printf("l3: %d\t",mix[l3]);
000044  7a21              LDRB     r1,[r4,#8]
000046  a020              ADR      r0,|L3.200|
000048  f7fffffe          BL       __2printf
;;;82         printf("l4: %d\n",mix[l4]);
00004c  7a61              LDRB     r1,[r4,#9]
00004e  a020              ADR      r0,|L3.208|
000050  f7fffffe          BL       __2printf
;;;83         printf("l5: %d\t",mix[l5]);
000054  7aa1              LDRB     r1,[r4,#0xa]
000056  a020              ADR      r0,|L3.216|
000058  f7fffffe          BL       __2printf
;;;84         printf("l6: %d\t",mix[l6]);
00005c  7ae1              LDRB     r1,[r4,#0xb]
00005e  a020              ADR      r0,|L3.224|
000060  f7fffffe          BL       __2printf
;;;85     
;;;86         printf("digl: %d\t",mix[digl]);
000064  7b21              LDRB     r1,[r4,#0xc]
000066  a020              ADR      r0,|L3.232|
000068  f7fffffe          BL       __2printf
;;;87         printf("digr: %d\n",mix[digr]);
00006c  7b61              LDRB     r1,[r4,#0xd]
00006e  a021              ADR      r0,|L3.244|
000070  f7fffffe          BL       __2printf
;;;88         printf("bluel: %d\t",mix[bluel]);
000074  7ba1              LDRB     r1,[r4,#0xe]
000076  a022              ADR      r0,|L3.256|
000078  f7fffffe          BL       __2printf
;;;89         printf("bluer: %d\t",mix[bluer]);
00007c  7be1              LDRB     r1,[r4,#0xf]
00007e  a023              ADR      r0,|L3.268|
000080  f7fffffe          BL       __2printf
;;;90         
;;;91     }
000084  bd10              POP      {r4,pc}
;;;92      
                          ENDP

000086  0000              DCW      0x0000
                  |L3.136|
000088  68313a20          DCB      "h1: %d\t",0
00008c  25640900
                  |L3.144|
000090  68323a20          DCB      "h2: %d\t",0
000094  25640900
                  |L3.152|
000098  68333a20          DCB      "h3: %d\t",0
00009c  25640900
                  |L3.160|
0000a0  68343a20          DCB      "h4: %d\t",0
0000a4  25640900
                  |L3.168|
0000a8  68353a20          DCB      "h5: %d\n",0
0000ac  25640a00
                  |L3.176|
0000b0  68363a20          DCB      "h6: %d\t",0
0000b4  25640900
                  |L3.184|
0000b8  6c313a20          DCB      "l1: %d\t",0
0000bc  25640900
                  |L3.192|
0000c0  6c323a20          DCB      "l2: %d\t",0
0000c4  25640900
                  |L3.200|
0000c8  6c333a20          DCB      "l3: %d\t",0
0000cc  25640900
                  |L3.208|
0000d0  6c343a20          DCB      "l4: %d\n",0
0000d4  25640a00
                  |L3.216|
0000d8  6c353a20          DCB      "l5: %d\t",0
0000dc  25640900
                  |L3.224|
0000e0  6c363a20          DCB      "l6: %d\t",0
0000e4  25640900
                  |L3.232|
0000e8  6469676c          DCB      "digl: %d\t",0
0000ec  3a202564
0000f0  0900    
0000f2  00                DCB      0
0000f3  00                DCB      0
                  |L3.244|
0000f4  64696772          DCB      "digr: %d\n",0
0000f8  3a202564
0000fc  0a00    
0000fe  00                DCB      0
0000ff  00                DCB      0
                  |L3.256|
000100  626c7565          DCB      "bluel: %d\t",0
000104  6c3a2025
000108  640900  
00010b  00                DCB      0
                  |L3.268|
00010c  626c7565          DCB      "bluer: %d\t",0
000110  723a2025
000114  640900  
000117  00                DCB      0

                          AREA ||.conststring||, DATA, READONLY, MERGE=1, STRINGS, ALIGN=2

000000  0a4e6f2e          DCB      "\nNo.%d--------------------------------Start-----------"
000004  25642d2d
000008  2d2d2d2d
00000c  2d2d2d2d
000010  2d2d2d2d
000014  2d2d2d2d
000018  2d2d2d2d
00001c  2d2d2d2d
000020  2d2d2d2d
000024  2d2d5374
000028  6172742d
00002c  2d2d2d2d
000030  2d2d2d2d
000034  2d2d    
000036  2d2d2d2d          DCB      "-----------------------------------\n",0
00003a  2d2d2d2d
00003e  2d2d2d2d
000042  2d2d2d2d
000046  2d2d2d2d
00004a  2d2d2d2d
00004e  2d2d2d2d
000052  2d2d2d2d
000056  2d2d2d0a
00005a  00      
00005b  00                DCB      0
00005c  0a4e6f2e          DCB      "\nNo.%d--------------------------------End-------------"
000060  25642d2d
000064  2d2d2d2d
000068  2d2d2d2d
00006c  2d2d2d2d
000070  2d2d2d2d
000074  2d2d2d2d
000078  2d2d2d2d
00007c  2d2d2d2d
000080  2d2d456e
000084  642d2d2d
000088  2d2d2d2d
00008c  2d2d2d2d
000090  2d2d    
000092  2d2d2d2d          DCB      "---------------------------------\n",0
000096  2d2d2d2d
00009a  2d2d2d2d
00009e  2d2d2d2d
0000a2  2d2d2d2d
0000a6  2d2d2d2d
0000aa  2d2d2d2d
0000ae  2d2d2d2d
0000b2  2d0a00  
