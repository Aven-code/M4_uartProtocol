; generated by Component: ARM Compiler 5.05 update 1 (build 106) Tool: ArmCC [4d0efa]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o..\..\obj\wwdg.o --asm_dir=..\..\LIST\ --list_dir=..\..\LIST\ --depend=..\..\obj\wwdg.d --cpu=Cortex-M4.fp --apcs=interwork -O0 --diag_suppress=9931 -I..\USER -I..\..\CORE -I..\..\FWLIB\inc -I..\..\SYSTEM\INC -IF:\粤嵌\课堂演示-粤嵌1914\3_Cortex-M4应用开发\13_IWDG独立看门狗\USER\RTE -IE:\Kile\ARM\PACK\Keil\STM32F4xx_DFP\1.0.8\Device\Include -IE:\Kile\ARM\CMSIS\Include -D__UVISION_VERSION=514 -DSTM32F40_41xxx -DSTM32F40_41xxx -DUSE_STDPERIPH_DRIVER --omf_browse=..\..\obj\wwdg.crf ..\..\SYSTEM\SRC\wwdg.c]
                          THUMB

                          AREA ||i.WWDG_IRQHandler||, CODE, READONLY, ALIGN=2

                  WWDG_IRQHandler PROC
;;;64      **/
;;;65     void WWDG_IRQHandler(void)
000000  b510              PUSH     {r4,lr}
;;;66     {
;;;67     	if (SET == WWDG_GetFlagStatus())
000002  f7fffffe          BL       WWDG_GetFlagStatus
000006  2801              CMP      r0,#1
000008  d103              BNE      |L1.18|
;;;68     	{
;;;69     		flag = 1;
00000a  4902              LDR      r1,|L1.20|
00000c  6008              STR      r0,[r1,#0]  ; flag
;;;70     		// 中断中喂狗
;;;71     		//WWDG_FEED(COUNTER);
;;;72     		// 清除中断标志
;;;73     		WWDG_ClearFlag();
00000e  f7fffffe          BL       WWDG_ClearFlag
                  |L1.18|
;;;74     	}
;;;75     }
000012  bd10              POP      {r4,pc}
;;;76     
                          ENDP

                  |L1.20|
                          DCD      flag

                          AREA ||i.wwdg_init||, CODE, READONLY, ALIGN=2

                  wwdg_init PROC
;;;18      **/
;;;19     void wwdg_init(uint32_t WWDG_Prescaler, uint8_t WindowValue, uint8_t Counter)
000000  b5f8              PUSH     {r3-r7,lr}
;;;20     {
000002  4606              MOV      r6,r0
000004  460d              MOV      r5,r1
000006  4614              MOV      r4,r2
;;;21     	NVIC_InitTypeDef NVIC_InitStruct;
;;;22     	
;;;23     	COUNTER = Counter;
000008  4811              LDR      r0,|L2.80|
00000a  6004              STR      r4,[r0,#0]  ; COUNTER
;;;24     	
;;;25     	// 使能 WWDG 时钟
;;;26     	RCC_APB1PeriphClockCmd(RCC_APB1Periph_WWDG, ENABLE);
00000c  2101              MOVS     r1,#1
00000e  02c8              LSLS     r0,r1,#11
000010  f7fffffe          BL       RCC_APB1PeriphClockCmd
;;;27     	
;;;28     	// 配置预分频值
;;;29     	WWDG_SetPrescaler(WWDG_Prescaler);
000014  4630              MOV      r0,r6
000016  f7fffffe          BL       WWDG_SetPrescaler
;;;30     	
;;;31     	// 设置窗口值
;;;32     	WWDG_SetWindowValue(WindowValue);
00001a  4628              MOV      r0,r5
00001c  f7fffffe          BL       WWDG_SetWindowValue
;;;33     		
;;;34     	// 使能看门狗，同时也喂狗
;;;35     	WWDG_Enable(Counter);
000020  4620              MOV      r0,r4
000022  f7fffffe          BL       WWDG_Enable
;;;36     	
;;;37     	// 配置 NVIC
;;;38     	NVIC_InitStruct.NVIC_IRQChannel = WWDG_IRQn;
000026  2000              MOVS     r0,#0
000028  f88d0000          STRB     r0,[sp,#0]
;;;39     	NVIC_InitStruct.NVIC_IRQChannelCmd = ENABLE;
00002c  2001              MOVS     r0,#1
00002e  f88d0003          STRB     r0,[sp,#3]
;;;40     	NVIC_InitStruct.NVIC_IRQChannelPreemptionPriority = 2;
000032  2002              MOVS     r0,#2
000034  f88d0001          STRB     r0,[sp,#1]
;;;41     	NVIC_InitStruct.NVIC_IRQChannelSubPriority = 1;
000038  2001              MOVS     r0,#1
00003a  f88d0002          STRB     r0,[sp,#2]
;;;42     	NVIC_Init(&NVIC_InitStruct);
00003e  4668              MOV      r0,sp
000040  f7fffffe          BL       NVIC_Init
;;;43     	
;;;44     	// 清除中断标志
;;;45     	WWDG_ClearFlag();
000044  f7fffffe          BL       WWDG_ClearFlag
;;;46     	
;;;47     	// 设置窗口看门狗中断，一旦使能就不能禁用
;;;48     	WWDG_EnableIT();
000048  f7fffffe          BL       WWDG_EnableIT
;;;49     }
00004c  bdf8              POP      {r3-r7,pc}
;;;50     
                          ENDP

00004e  0000              DCW      0x0000
                  |L2.80|
                          DCD      COUNTER

                          AREA ||i.wwdg_is_int||, CODE, READONLY, ALIGN=2

                  wwdg_is_int PROC
;;;81      **/
;;;82     int wwdg_is_int(void)
000000  4805              LDR      r0,|L3.24|
;;;83     {
;;;84     	if (flag)
000002  6800              LDR      r0,[r0,#0]  ; flag
000004  b120              CBZ      r0,|L3.16|
;;;85     	{
;;;86     		flag = 0;
000006  2000              MOVS     r0,#0
000008  4903              LDR      r1,|L3.24|
00000a  6008              STR      r0,[r1,#0]  ; flag
;;;87     		return 1;
00000c  2001              MOVS     r0,#1
                  |L3.14|
;;;88     	}
;;;89     	return flag;
;;;90     }
00000e  4770              BX       lr
                  |L3.16|
000010  4801              LDR      r0,|L3.24|
000012  6800              LDR      r0,[r0,#0]            ;89  ; flag
000014  e7fb              B        |L3.14|
                          ENDP

000016  0000              DCW      0x0000
                  |L3.24|
                          DCD      flag

                          AREA ||.data||, DATA, ALIGN=2

                  flag
                          DCD      0x00000000
                  COUNTER
                          DCD      0x00000000

;*** Start embedded assembler ***

#line 1 "..\\..\\SYSTEM\\SRC\\wwdg.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___6_wwdg_c_e325165d____REV16|
#line 138 "..\\..\\CORE\\core_cmInstr.h"
|__asm___6_wwdg_c_e325165d____REV16| PROC
#line 139

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___6_wwdg_c_e325165d____REVSH|
#line 153
|__asm___6_wwdg_c_e325165d____REVSH| PROC
#line 154

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___6_wwdg_c_e325165d____RRX|
#line 328
|__asm___6_wwdg_c_e325165d____RRX| PROC
#line 329

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
